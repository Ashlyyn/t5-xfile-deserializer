use common::{Vec2, Vec3};
use num::FromPrimitive;

use crate::*;

#[cfg_attr(feature = "serde", derive(Serialize))]
#[derive(Clone, Default, Debug, Deserialize)]
pub(crate) struct WeaponVariantDefRaw<'a> {
    pub internal_name: XString<'a>,
    pub variant_count: i32,
    pub weap_def: Ptr32<'a, WeaponDefRaw<'a>>,
    pub display_name: XString<'a>,
    pub xanims: Ptr32ArrayConst<'a, XString<'a>, 66>,
    pub alt_weapon_name: XString<'a>,
    pub hide_tags: Ptr32ArrayConst<'a, ScriptString, 32>,
    pub alt_weapon_index: u32,
    pub clip_size: i32,
    pub reload_time: i32,
    pub reload_empty_time: i32,
    pub reload_quick_time: i32,
    pub reload_quick_empty_time: i32,
    pub ads_trans_in_time: i32,
    pub ads_trans_out_time: i32,
    pub alt_raise_time: i32,
    pub ammo_name: XString<'a>,
    pub ammo_index: i32,
    pub clip_name: XString<'a>,
    pub clip_index: i32,
    pub aim_assist_range_ads: f32,
    pub ads_sway_horiz_scale: f32,
    pub ads_sway_vert_scale: f32,
    pub ads_view_kick_center_speed: f32,
    pub hip_view_kick_center_speed: f32,
    pub ads_zoom_fov_1: f32,
    pub ads_zoom_fov_2: f32,
    pub ads_zoom_fov_3: f32,
    pub ads_zoom_in_frac: f32,
    pub ads_zoom_out_frac: f32,
    pub overlay_alpha_scale: f32,
    pub oo_pos_anim_length: [f32; 2],
    pub silenced: bool,
    pub dual_mag: bool,
    pub full_metal_jacket: bool,
    pub hollow_point: bool,
    pub rapid_fire: bool,
    pub overlay_material: Ptr32<'a, techset::MaterialRaw<'a>>,
    pub overlay_material_low_res: Ptr32<'a, techset::MaterialRaw<'a>>,
    pub dpad_icon: Ptr32<'a, techset::MaterialRaw<'a>>,
    pub dpad_icon_ratio: u32,
    pub left_hand_offset: [f32; 3],
    pub left_hand_rotation: [f32; 3],
    pub left_hand_prone_offset: [f32; 3],
    pub left_hand_prone_rotation: [f32; 3],
    pub left_hand_ui_viewer_offset: [f32; 3],
    pub left_hand_ui_viewer_rotation: [f32; 3],
}
assert_size!(WeaponVariantDefRaw, 228);

#[cfg_attr(feature = "serde", derive(Serialize, Deserialize))]
#[derive(Copy, Clone, Debug, Default, Eq, PartialEq, FromPrimitive)]
#[repr(u32)]
pub enum WeaponIconRatioType {
    #[default]
    ONE_TO_ONE = 0,
    TWO_TO_ONE = 1,
    FOUR_TO_ONE = 2,
    COUNT = 3,
}

#[cfg_attr(feature = "serde", derive(Serialize, Deserialize))]
#[derive(Clone, Default, Debug)]
pub struct WeaponVariantDef {
    pub internal_name: String,
    pub variant_count: usize,
    pub weap_def: Option<Box<WeaponDef>>,
    pub display_name: String,
    pub xanims: Vec<String>,
    pub alt_weapon_name: String,
    pub hide_tags: Vec<String>,
    pub alt_weapon_index: u32,
    pub clip_size: i32,
    pub reload_time: i32,
    pub reload_empty_time: i32,
    pub reload_quick_time: i32,
    pub reload_quick_empty_time: i32,
    pub ads_trans_in_time: i32,
    pub ads_trans_out_time: i32,
    pub alt_raise_time: i32,
    pub ammo_name: String,
    pub ammo_index: usize,
    pub clip_name: String,
    pub clip_index: usize,
    pub aim_assist_range_ads: f32,
    pub ads_sway_horiz_scale: f32,
    pub ads_sway_vert_scale: f32,
    pub ads_view_kick_center_speed: f32,
    pub hip_view_kick_center_speed: f32,
    pub ads_zoom_fov_1: f32,
    pub ads_zoom_fov_2: f32,
    pub ads_zoom_fov_3: f32,
    pub ads_zoom_in_frac: f32,
    pub ads_zoom_out_frac: f32,
    pub overlay_alpha_scale: f32,
    pub oo_pos_anim_length: Vec2,
    pub silenced: bool,
    pub dual_mag: bool,
    pub full_metal_jacket: bool,
    pub hollow_point: bool,
    pub rapid_fire: bool,
    pub overlay_material: Option<Box<techset::Material>>,
    pub overlay_material_low_res: Option<Box<techset::Material>>,
    pub dpad_icon: Option<Box<techset::Material>>,
    pub dpad_icon_ratio: WeaponIconRatioType,
    pub left_hand_offset: Vec3,
    pub left_hand_rotation: Vec3,
    pub left_hand_prone_offset: Vec3,
    pub left_hand_prone_rotation: Vec3,
    pub left_hand_ui_viewer_offset: Vec3,
    pub left_hand_ui_viewer_rotation: Vec3,
}

impl<'a> XFileInto<WeaponVariantDef, ()> for WeaponVariantDefRaw<'a> {
    fn xfile_into(&self, mut xfile: impl Read + Seek, _data: ()) -> Result<WeaponVariantDef> {
        let internal_name = self.internal_name.xfile_into(&mut xfile, ())?;
        let weap_def = self.weap_def.xfile_into(&mut xfile, ())?;
        let display_name = self.display_name.xfile_into(&mut xfile, ())?;
        let xanims = self.xanims.xfile_into(&mut xfile, ())?;
        let alt_weapon_name = self.alt_weapon_name.xfile_into(&mut xfile, ())?;
        let hide_tags = self
            .hide_tags
            .to_vec(&mut xfile)?
            .into_iter()
            .map(|s| s.to_string())
            .collect();
        let ammo_name = self.ammo_name.xfile_into(&mut xfile, ())?;
        let clip_name = self.clip_name.xfile_into(&mut xfile, ())?;
        let oo_pos_anim_length = self.oo_pos_anim_length.into();
        let overlay_material = self.overlay_material.xfile_into(&mut xfile, ())?;
        let overlay_material_low_res = self.overlay_material_low_res.xfile_into(&mut xfile, ())?;
        let dpad_icon = self.dpad_icon.xfile_into(&mut xfile, ())?;
        let dpad_icon_ratio = FromPrimitive::from_u32(self.dpad_icon_ratio)
            .ok_or(Error::BadFromPrimitive(self.dpad_icon_ratio as _))?;
        let left_hand_offset = self.left_hand_offset.into();
        let left_hand_rotation = self.left_hand_rotation.into();
        let left_hand_prone_offset = self.left_hand_prone_offset.into();
        let left_hand_prone_rotation = self.left_hand_prone_rotation.into();
        let left_hand_ui_viewer_offset = self.left_hand_ui_viewer_offset.into();
        let left_hand_ui_viewer_rotation = self.left_hand_ui_viewer_rotation.into();

        Ok(WeaponVariantDef {
            internal_name,
            variant_count: self.variant_count as _,
            weap_def,
            display_name,
            xanims,
            alt_weapon_name,
            hide_tags,
            alt_weapon_index: self.alt_weapon_index,
            clip_size: self.clip_size,
            reload_time: self.reload_time,
            reload_empty_time: self.reload_empty_time,
            reload_quick_time: self.reload_quick_time,
            reload_quick_empty_time: self.reload_quick_empty_time,
            ads_trans_in_time: self.ads_trans_in_time,
            ads_trans_out_time: self.ads_trans_out_time,
            alt_raise_time: self.alt_raise_time,
            ammo_name,
            ammo_index: self.ammo_index as _,
            clip_name,
            clip_index: self.clip_index as _,
            aim_assist_range_ads: self.aim_assist_range_ads,
            ads_sway_horiz_scale: self.ads_sway_horiz_scale,
            ads_sway_vert_scale: self.ads_sway_vert_scale,
            ads_view_kick_center_speed: self.ads_view_kick_center_speed,
            hip_view_kick_center_speed: self.hip_view_kick_center_speed,
            ads_zoom_fov_1: self.ads_zoom_fov_1,
            ads_zoom_fov_2: self.ads_zoom_fov_2,
            ads_zoom_fov_3: self.ads_zoom_fov_3,
            ads_zoom_in_frac: self.ads_zoom_in_frac,
            ads_zoom_out_frac: self.ads_zoom_out_frac,
            overlay_alpha_scale: self.overlay_alpha_scale,
            oo_pos_anim_length,
            silenced: self.silenced,
            dual_mag: self.dual_mag,
            full_metal_jacket: self.full_metal_jacket,
            hollow_point: self.hollow_point,
            rapid_fire: self.rapid_fire,
            overlay_material,
            overlay_material_low_res,
            dpad_icon,
            dpad_icon_ratio,
            left_hand_offset,
            left_hand_rotation,
            left_hand_prone_offset,
            left_hand_prone_rotation,
            left_hand_ui_viewer_offset,
            left_hand_ui_viewer_rotation,
        })
    }
}

#[cfg_attr(feature = "serde", derive(Serialize))]
#[derive(Clone, Default, Debug, Deserialize)]
pub(crate) struct WeaponDefRaw<'a> {
    pub overlay_name: XString<'a>,
    pub gun_xmodel: Ptr32<'a, Ptr32<'a, xmodel::XModelRaw<'a>>>,
    pub hand_xmodel: Ptr32<'a, xmodel::XModelRaw<'a>>,
    pub mode_name: XString<'a>,
    pub notetrack_sound_map_keys: Ptr32ArrayConst<'a, ScriptString, 20>,
    pub notetrack_sound_map_values: Ptr32ArrayConst<'a, ScriptString, 20>,
    pub player_anim_type: i32,
    pub weap_type: u32,
    pub weap_class: u32,
    pub penetrate_type: u32,
    pub impact_type: u32,
    pub inventory_type: u32,
    pub fire_type: u32,
    pub clip_type: u32,
    pub item_index: i32,
    pub parent_weapon_name: XString<'a>,
    pub jam_fire_time: i32,
    pub tracer_frequency: i32,
    pub tracer_width: f32,
    pub tracer_length: f32,
    pub overheat_weapon: i32,
    pub overheat_rate: f32,
    pub cooldown_rate: f32,
    pub overheat_end_val: f32,
    pub cool_while_firing: bool,
    pub fuel_tank_weapon: bool,
    pub pad: [u8; 3],
    pub tank_life_time: i32,
    pub offhand_class: u32,
    pub offhand_slot: u32,
    pub stance: u32,
    pub view_flash_effect: Ptr32<'a, fx::FxEffectDefRaw<'a>>,
    pub world_flash_effect: Ptr32<'a, fx::FxEffectDefRaw<'a>>,
    pub pickup_sound: XString<'a>,
    pub pickup_sound_player: XString<'a>,
    pub ammo_pickup_sound: XString<'a>,
    pub ammo_pickup_sound_player: XString<'a>,
    pub projectile_sound: XString<'a>,
    pub pullback_sound: XString<'a>,
    pub pullback_sound_player: XString<'a>,
    pub fire_sound: XString<'a>,
    pub fire_sound_player: XString<'a>,
    pub fire_loop_sound: XString<'a>,
    pub fire_loop_sound_player: XString<'a>,
    pub fire_loop_end_sound: XString<'a>,
    pub fire_loop_end_sound_player: XString<'a>,
    pub fire_stop_sound: XString<'a>,
    pub fire_stop_sound_player: XString<'a>,
    pub fire_last_sound: XString<'a>,
    pub fire_last_sound_player: XString<'a>,
    pub empty_fire_sound: XString<'a>,
    pub empty_fire_sound_player: XString<'a>,
    pub crack_sound: XString<'a>,
    pub whiz_by_sound: XString<'a>,
    pub melee_swipe_sound: XString<'a>,
    pub melee_swipe_sound_player: XString<'a>,
    pub melee_hit_sound: XString<'a>,
    pub melee_miss_sound: XString<'a>,
    pub rechamber_sound: XString<'a>,
    pub rechamber_sound_player: XString<'a>,
    pub reload_sound: XString<'a>,
    pub reload_sound_player: XString<'a>,
    pub reload_empty_sound: XString<'a>,
    pub reload_empty_sound_player: XString<'a>,
    pub reload_start_sound: XString<'a>,
    pub reload_start_sound_player: XString<'a>,
    pub reload_end_sound: XString<'a>,
    pub reload_end_sound_player: XString<'a>,
    pub rotate_loop_sound: XString<'a>,
    pub rotate_loop_sound_player: XString<'a>,
    pub deploy_sound: XString<'a>,
    pub deploy_sound_player: XString<'a>,
    pub finish_deploy_sound: XString<'a>,
    pub finish_deploy_sound_player: XString<'a>,
    pub breakdown_sound: XString<'a>,
    pub breakdown_sound_player: XString<'a>,
    pub finish_breakdown_sound: XString<'a>,
    pub finish_breakdown_sound_player: XString<'a>,
    pub detonate_sound: XString<'a>,
    pub detonate_sound_player: XString<'a>,
    pub night_vision_wear_sound: XString<'a>,
    pub night_vision_wear_sound_player: XString<'a>,
    pub night_vision_remove_sound: XString<'a>,
    pub night_vision_remove_sound_player: XString<'a>,
    pub alt_switch_sound: XString<'a>,
    pub alt_switch_sound_player: XString<'a>,
    pub raise_sound: XString<'a>,
    pub raise_sound_player: XString<'a>,
    pub first_raise_sound: XString<'a>,
    pub first_raise_sound_player: XString<'a>,
    pub put_away_sound: XString<'a>,
    pub put_away_sound_player: XString<'a>,
    pub overheat_sound: XString<'a>,
    pub overheat_sound_player: XString<'a>,
    pub ads_zoom_sound: XString<'a>,
    pub bounce_sound: Ptr32ArrayConst<'a, XString<'a>, 31>,
    pub stand_mounted_weapdef: XString<'a>,
    pub crouch_mounted_weapdef: XString<'a>,
    pub prone_mounted_weapdef: XString<'a>,
    pub stand_mounted_index: i32,
    pub crouch_mounted_index: i32,
    pub prone_mounted_index: i32,
    pub view_shell_eject_effect: Ptr32<'a, fx::FxEffectDefRaw<'a>>,
    pub world_shell_eject_effect: Ptr32<'a, fx::FxEffectDefRaw<'a>>,
    pub view_last_shot_eject_effect: Ptr32<'a, fx::FxEffectDefRaw<'a>>,
    pub world_last_shot_eject_effect: Ptr32<'a, fx::FxEffectDefRaw<'a>>,
    pub reticle_center: Ptr32<'a, techset::MaterialRaw<'a>>,
    pub reticle_side: Ptr32<'a, techset::MaterialRaw<'a>>,
    pub reticle_center_size: i32,
    pub reticle_side_size: i32,
    pub reticle_min_ofs: i32,
    pub active_reticle_type: u32,
    pub stand_move: [f32; 3],
    pub stand_rot: [f32; 3],
    pub ducked_ofs: [f32; 3],
    pub ducked_move: [f32; 3],
    pub ducked_sprint_ofs: [f32; 3],
    pub ducked_sprint_rot: [f32; 3],
    pub ducked_sprint_bob: [f32; 2],
    pub ducked_sprint_cycle_scale: f32,
    pub sprint_ofs: [f32; 3],
    pub sprint_rot: [f32; 3],
    pub sprint_bob: [f32; 2],
    pub sprint_cycle_scale: f32,
    pub low_ready_ofs: [f32; 3],
    pub low_ready_rot: [f32; 3],
    pub dtp_ofs: [f32; 3],
    pub dtp_rot: [f32; 3],
    pub dtp_bob: [f32; 2],
    pub dtp_cycle_scale: f32,
    pub mantle_ofs: [f32; 3],
    pub mantle_rot: [f32; 3],
    pub slide_ofs: [f32; 3],
    pub slide_rot: [f32; 3],
    pub ducked_rot: [f32; 3],
    pub prone_ofs: [f32; 3],
    pub prone_move: [f32; 3],
    pub prone_rot: [f32; 3],
    pub strafe_move: [f32; 3],
    pub strafe_rot: [f32; 3],
    pub pos_move_rate: f32,
    pub pos_prone_move_rate: f32,
    pub stand_move_min_speed: f32,
    pub ducked_move_min_speed: f32,
    pub prone_move_min_speed: f32,
    pub pos_rot_rate: f32,
    pub pos_prone_rot_rate: f32,
    pub stand_rot_min_speed: f32,
    pub ducked_rot_min_speed: f32,
    pub prone_rot_min_speed: f32,
    pub world_model: Ptr32ArrayConst<'a, Ptr32<'a, xmodel::XModelRaw<'a>>, 16>,
    pub world_clip_model: Ptr32<'a, xmodel::XModelRaw<'a>>,
    pub rocket_model: Ptr32<'a, xmodel::XModelRaw<'a>>,
    pub mounted_model: Ptr32<'a, xmodel::XModelRaw<'a>>,
    pub additional_melee_model: Ptr32<'a, xmodel::XModelRaw<'a>>,
    pub hud_icon: Ptr32<'a, techset::MaterialRaw<'a>>,
    pub hud_icon_ratio: u32,
    pub indicator_icon: Ptr32<'a, techset::MaterialRaw<'a>>,
    pub indicator_icon_ratio: u32,
    pub ammo_counter_icon: Ptr32<'a, techset::MaterialRaw<'a>>,
    pub ammo_counter_icon_ratio: u32,
    pub ammo_counter_clip: u32,
    pub start_ammo: i32,
    pub head_index: i32,
    pub max_ammo: i32,
    pub shot_count: i32,
    pub shared_ammo_cap_name: XString<'a>,
    pub shared_ammo_cap_index: i32,
    pub shared_ammo_cap: i32,
    pub unlimited_ammo: bool,
    pub ammo_count_clip_relative: bool,
    pub pad2: [u8; 2],
    pub damage: i32,
    pub damage_duration: f32,
    pub damage_interval: f32,
    pub player_damage: i32,
    pub melee_damage: i32,
    pub damage_type: i32,
    pub explosion_tag: ScriptString,
    pub fire_delay: i32,
    pub melee_delay: i32,
    pub melee_charge_delay: i32,
    pub detonate_delay: i32,
    pub spin_up_time: i32,
    pub spin_down_time: i32,
    pub spin_rate: f32,
    pub spin_loop_sound: XString<'a>,
    pub spin_loop_sound_player: XString<'a>,
    pub start_spin_sound: XString<'a>,
    pub start_spin_sound_player: XString<'a>,
    pub stop_spin_sound: XString<'a>,
    pub stop_spin_sound_player: XString<'a>,
    pub fire_time: i32,
    pub last_fire_time: i32,
    pub rechamber_time: i32,
    pub rechamber_bolt_time: i32,
    pub hold_fire_time: i32,
    pub detonate_fire_time: i32,
    pub melee_time: i32,
    pub melee_charge_time: i32,
    pub reload_time_right: i32,
    pub reload_time_left: i32,
    pub reload_show_rocket_time: i32,
    pub reload_empty_time_left: i32,
    pub reload_add_time: i32,
    pub reload_empty_add_time: i32,
    pub reload_quick_add_time: i32,
    pub reload_quick_empty_add_time: i32,
    pub reload_start_time: i32,
    pub reload_start_add_time: i32,
    pub reload_end_time: i32,
    pub drop_time: i32,
    pub raise_time: i32,
    pub alt_drop_time: i32,
    pub quick_drop_time: i32,
    pub quick_raise_time: i32,
    pub first_raise_time: i32,
    pub empty_raise_time: i32,
    pub empty_drop_time: i32,
    pub sprint_in_time: i32,
    pub sprint_loop_time: i32,
    pub sprint_out_time: i32,
    pub low_ready_in_time: i32,
    pub low_ready_loop_time: i32,
    pub low_ready_out_time: i32,
    pub cont_fire_in_time: i32,
    pub cont_fire_loop_time: i32,
    pub cont_fire_out_time: i32,
    pub dtp_in_time: i32,
    pub dtp_loop_time: i32,
    pub dtp_out_time: i32,
    pub slide_in_time: i32,
    pub deploy_time: i32,
    pub breakdown_time: i32,
    pub night_vision_wear_time: i32,
    pub night_vision_wear_time_fade_out_end: i32,
    pub night_vision_wear_time_power_up: i32,
    pub night_vision_remove_time: i32,
    pub night_vision_remove_time_power_down: i32,
    pub night_vision_remove_time_fade_in_start: i32,
    pub fuse_time: i32,
    pub ai_fuse_time: i32,
    pub lock_on_radius: i32,
    pub lock_on_speed: i32,
    pub require_lockon_to_fire: bool,
    pub no_ads_when_mag_empty: bool,
    pub avoid_drop_cleanup: bool,
    pub pad3: [u8; 1],
    pub stack_fire: u32,
    pub stack_fire_spread: f32,
    pub stack_fire_accuracy_decay: f32,
    pub stack_sound: XString<'a>,
    pub auto_aim_range: f32,
    pub aim_assist_range: f32,
    pub mountable_weapon: bool,
    pub pad4: [u8; 3],
    pub aim_padding: f32,
    pub enemy_crosshair_range: f32,
    pub crosshair_color_change: bool,
    pub move_speed_scale: f32,
    pub ads_move_speed_scale: f32,
    pub sprint_duration_scale: f32,
    pub overlay_reticle: u32,
    pub overlay_interface: u32,
    pub overlay_width: f32,
    pub overlay_height: f32,
    pub ads_bob_factor: f32,
    pub ads_view_bob_mult: f32,
    pub hip_spread_stand_min: f32,
    pub hip_spread_ducked_min: f32,
    pub hip_spread_prone_min: f32,
    pub hip_spread_stand_max: f32,
    pub hip_spread_ducked_max: f32,
    pub hip_spread_prone_max: f32,
    pub hip_spread_decay_rate: f32,
    pub hip_spread_fire_add: f32,
    pub hip_spread_turn_add: f32,
    pub hip_spread_move_add: f32,
    pub hip_spread_ducked_decay: f32,
    pub hip_spread_prone_decay: f32,
    pub hip_reticle_side_pos: f32,
    pub ads_idle_amount: f32,
    pub hip_idle_amount: f32,
    pub ads_idle_speed: f32,
    pub hip_idle_speed: f32,
    pub idle_crouch_factor: f32,
    pub idle_prone_factor: f32,
    pub gun_max_pitch: f32,
    pub gun_max_yaw: f32,
    pub sway_max_angle: f32,
    pub sway_lerp_speed: f32,
    pub sway_pitch_scale: f32,
    pub sway_yaw_scale: f32,
    pub sway_horiz_scale: f32,
    pub sway_vert_scale: f32,
    pub sway_shell_shock_scale: f32,
    pub ads_sway_max_angle: f32,
    pub ads_sway_lerp_speed: f32,
    pub ads_sway_pitch_scale: f32,
    pub ads_sway_yaw_scale: f32,
    pub shared_ammo: bool,
    pub rifle_bullet: bool,
    pub armor_piercing: bool,
    pub bolt_action: bool,
    pub use_alt_tag_flesh: bool,
    pub use_anti_lag_rewind: bool,
    pub is_carried_killstreak_weapon: bool,
    pub aim_down_sight: bool,
    pub rechamber_while_ads: bool,
    pub reload_while_ads: bool,
    pub pad5: [u8; 2],
    pub ads_view_error_min: f32,
    pub ads_view_error_max: f32,
    pub cook_off_hold: bool,
    pub clip_only: bool,
    pub can_use_in_vehicle: bool,
    pub no_drops_or_raises: bool,
    pub ads_fire_only: bool,
    pub cancel_auto_holster_when_empty: bool,
    pub suppress_ammo_reserve_display: bool,
    pub laser_sight_during_nightvision: bool,
    pub hide_third_person: bool,
    pub has_bayonet: bool,
    pub dual_wield: bool,
    pub explode_on_ground: bool,
    pub throw_back: bool,
    pub retrievable: bool,
    pub die_on_respawn: bool,
    pub no_third_person_drops_or_raises: bool,
    pub continuous_fire: bool,
    pub no_ping: bool,
    pub force_bounce: bool,
    pub use_dropped_model_as_stowed: bool,
    pub no_quick_drop_when_empty: bool,
    pub keep_crosshair_when_ads: bool,
    pub use_only_alt_weaopon_hide_tags_in_alt_mode: bool,
    pub pad6: [u8; 2],
    pub kill_icon: Ptr32<'a, techset::MaterialRaw<'a>>,
    pub kill_icon_ratio: u32,
    pub flip_kill_icon: bool,
    pub no_partial_reload: bool,
    pub segmented_reload: bool,
    pub no_ads_auto_reload: bool,
    pub reload_ammo_add: i32,
    pub reload_start_add: i32,
    pub spawned_grenade_weapon_name: XString<'a>,
    pub dual_wield_weapon_name: XString<'a>,
    pub dual_wield_weapon_index: u32,
    pub drop_ammo_min: i32,
    pub drop_ammo_max: i32,
    pub drop_clip_ammo_min: i32,
    pub drop_clip_ammo_max: i32,
    pub blocks_prone: bool,
    pub show_indicator: bool,
    pub pad7: [u8; 2],
    pub is_rolling_grenade: i32,
    pub explosion_radius: i32,
    pub explosion_radius_min: i32,
    pub indicator_radius: i32,
    pub explosion_inner_damage: i32,
    pub explosion_outer_damage: i32,
    pub damage_cone_angle: f32,
    pub projectile_speed: i32,
    pub projectile_speed_up: i32,
    pub projectile_speed_relative_up: i32,
    pub projectile_speed_forward: i32,
    pub projectile_active_dist: i32,
    pub proj_lifetime: f32,
    pub time_to_accelerate: f32,
    pub projectile_curvature: f32,
    pub projectile_model: Ptr32<'a, xmodel::XModelRaw<'a>>,
    pub proj_explosion: u32,
    pub proj_explosion_effect: Ptr32<'a, fx::FxEffectDefRaw<'a>>,
    pub proj_explosion_effect_force_normal_up: bool,
    pub pad8: [u8; 3],
    pub proj_explosion_effect_2: Ptr32<'a, fx::FxEffectDefRaw<'a>>,
    pub proj_explosion_effect_2_force_normal_up: bool,
    pub pad9: [u8; 3],
    pub proj_explosion_effect_3: Ptr32<'a, fx::FxEffectDefRaw<'a>>,
    pub proj_explosion_effect_3_force_normal_up: bool,
    pub pad10: [u8; 3],
    pub proj_explosion_effect_4: Ptr32<'a, fx::FxEffectDefRaw<'a>>,
    pub proj_explosion_effect_4_force_normal_up: bool,
    pub pad11: [u8; 3],
    pub proj_explosion_effect_5: Ptr32<'a, fx::FxEffectDefRaw<'a>>,
    pub proj_explosion_effect_5_force_normal_up: bool,
    pub pad12: [u8; 3],
    pub proj_dud_effect: Ptr32<'a, fx::FxEffectDefRaw<'a>>,
    pub proj_explosion_sound: XString<'a>,
    pub proj_dud_sound: XString<'a>,
    pub mortar_shell_sound: XString<'a>,
    pub tank_shell_sound: XString<'a>,
    pub proj_impact_explode: bool,
    pub bullet_impact_explode: bool,
    pub pad13: [u8; 2],
    pub stickiness: u32,
    pub rotate_type: u32,
    pub plantable: bool,
    pub has_detonator: bool,
    pub time_detonation: bool,
    pub no_crumple_missile: bool,
    pub rotate: bool,
    pub keep_rolling: bool,
    pub hold_button_to_throw: bool,
    pub offhand_hold_is_cancelable: bool,
    pub freeze_movement_when_firing: bool,
    pub pad14: [u8; 3],
    pub low_ammo_warning_threshold: f32,
    pub melee_charge_range: f32,
    pub use_as_melee: bool,
    pub is_camera_sensor: bool,
    pub is_acoustic_sensor: bool,
    pub pad15: [u8; 1],
    pub parallel_bounce: Ptr32ArrayConst<'a, f32, 31>,
    pub perpendicular_bounce: Ptr32ArrayConst<'a, f32, 31>,
    pub proj_tail_effect: Ptr32<'a, fx::FxEffectDefRaw<'a>>,
    pub projectile_color: [f32; 3],
    pub guided_missile_type: u32,
    pub max_steering_accel: f32,
    pub proj_ignition_delay: i32,
    pub proj_ignition_effect: Ptr32<'a, fx::FxEffectDefRaw<'a>>,
    pub proj_ignition_sound: XString<'a>,
    pub ads_aim_pitch: f32,
    pub ads_crosshair_in_frac: f32,
    pub ads_crosshair_out_frac: f32,
    pub ads_gun_kick_reduced_kick_bullets: i32,
    pub ads_gun_kick_reduced_kick_percent: f32,
    pub ads_gun_kick_pitch_min: f32,
    pub ads_gun_kick_pitch_max: f32,
    pub ads_gun_kick_yaw_min: f32,
    pub ads_gun_kick_yaw_max: f32,
    pub ads_gun_kick_accel: f32,
    pub ads_gun_kick_speed_max: f32,
    pub ads_gun_kick_speed_decay: f32,
    pub ads_gun_kick_static_decay: f32,
    pub ads_view_kick_pitch_min: f32,
    pub ads_view_kick_pitch_max: f32,
    pub ads_view_kick_yaw_min: f32,
    pub ads_view_kick_yaw_max: f32,
    pub ads_view_scatter_min: f32,
    pub ads_view_scatter_max: f32,
    pub ads_spread: f32,
    pub hip_gun_kick_reduced_kick_bullets: i32,
    pub hip_gun_kick_reduced_kick_percent: f32,
    pub hip_gun_kick_pitch_min: f32,
    pub hip_gun_kick_pitch_max: f32,
    pub hip_gun_kick_yaw_min: f32,
    pub hip_gun_kick_yaw_max: f32,
    pub hip_gun_kick_accel: f32,
    pub hip_gun_kick_speed_max: f32,
    pub hip_gun_kick_speed_decay: f32,
    pub hip_gun_kick_static_decay: f32,
    pub hip_view_kick_pitch_min: f32,
    pub hip_view_kick_pitch_max: f32,
    pub hip_view_kick_yaw_min: f32,
    pub hip_view_kick_yaw_max: f32,
    pub hip_view_scatter_min: f32,
    pub hip_view_scatter_max: f32,
    pub fight_dist: f32,
    pub max_dist: f32,
    pub accuracy_graph_name: [XString<'a>; 2],
    pub accuracy_graph_knots: [Ptr32<'a, [f32; 2]>; 2],
    pub original_accuracy_graph_knots: [Ptr32<'a, [f32; 2]>; 2],
    pub accuracy_graph_knot_count: [i32; 2],
    pub original_accuracy_graph_knot_count: [i32; 2],
    pub position_reload_trans_time: i32,
    pub left_arc: f32,
    pub right_arc: f32,
    pub top_arc: f32,
    pub bottom_arc: f32,
    pub accuracy: f32,
    pub ai_spread: f32,
    pub player_spread: f32,
    pub min_turn_speed: [f32; 2],
    pub max_turn_speed: [f32; 2],
    pub pitch_convergence_time: f32,
    pub yaw_convergence_time: f32,
    pub suppress_time: f32,
    pub max_range: f32,
    pub anim_hor_rotate_inc: f32,
    pub player_position_dist: f32,
    pub use_hint_string: XString<'a>,
    pub drop_hint_string: XString<'a>,
    pub use_hint_string_index: i32,
    pub drop_hint_string_index: i32,
    pub horiz_view_jitter: f32,
    pub vert_view_jitter: f32,
    pub script: XString<'a>,
    pub min_damage: i32,
    pub min_player_damage: i32,
    pub max_damage_range: f32,
    pub min_damage_range: f32,
    pub destabilization_rate_time: f32,
    pub destabilization_curvature_max: f32,
    pub destabilize_distance: i32,
    pub location_damage_multipliers: Ptr32ArrayConst<'a, f32, 19>,
    pub fire_rumble: XString<'a>,
    pub melee_impact_rumble: XString<'a>,
    pub reload_rumble: XString<'a>,
    pub ads_dof_start: f32,
    pub ads_dof_end: f32,
    pub hip_dof_start: f32,
    pub hip_dof_end: f32,
    pub scan_speed: f32,
    pub scan_accel: f32,
    pub scan_pause_time: i32,
    pub flame_table_first_person: XString<'a>,
    pub flame_table_third_person: XString<'a>,
    pub flame_table_first_person_ptr: Ptr32<'a, FlameTableRaw<'a>>,
    pub flame_table_third_person_ptr: Ptr32<'a, FlameTableRaw<'a>>,
    pub tag_fx_preparation_effect: Ptr32<'a, fx::FxEffectDefRaw<'a>>,
    pub tag_flash_preparation_effect: Ptr32<'a, fx::FxEffectDefRaw<'a>>,
    pub do_gibbing: bool,
    pub pad16: [u8; 3],
    pub max_gib_distance: f32,
}
assert_size!(WeaponDefRaw, 2056);

#[cfg_attr(feature = "serde", derive(Serialize, Deserialize))]
#[derive(Clone, Default, Debug)]
pub struct WeaponDef {
    pub overlay_name: String,
    pub gun_xmodel: Option<Box<Option<Box<xmodel::XModel>>>>,
    pub hand_xmodel: Option<Box<xmodel::XModel>>,
    pub mode_name: String,
    pub notetrack_sound_map_keys: Option<Box<[String; 20]>>,
    pub notetrack_sound_map_values: Option<Box<[String; 20]>>,
    pub player_anim_type: i32,
    pub weap_type: u32,
    pub weap_class: u32,
    pub penetrate_type: u32,
    pub impact_type: u32,
    pub inventory_type: u32,
    pub fire_type: u32,
    pub clip_type: u32,
    pub item_index: i32,
    pub parent_weapon_name: String,
    pub jam_fire_time: i32,
    pub tracer_frequency: i32,
    pub tracer_width: f32,
    pub tracer_length: f32,
    pub overheat_weapon: i32,
    pub overheat_rate: f32,
    pub cooldown_rate: f32,
    pub overheat_end_val: f32,
    pub cool_while_firing: bool,
    pub fuel_tank_weapon: bool,
    pub tank_life_time: i32,
    pub offhand_class: u32,
    pub offhand_slot: u32,
    pub stance: u32,
    pub view_flash_effect: Option<Box<fx::FxEffectDef>>,
    pub world_flash_effect: Option<Box<fx::FxEffectDef>>,
    pub pickup_sound: String,
    pub pickup_sound_player: String,
    pub ammo_pickup_sound: String,
    pub ammo_pickup_sound_player: String,
    pub projectile_sound: String,
    pub pullback_sound: String,
    pub pullback_sound_player: String,
    pub fire_sound: String,
    pub fire_sound_player: String,
    pub fire_loop_sound: String,
    pub fire_loop_sound_player: String,
    pub fire_loop_end_sound: String,
    pub fire_loop_end_sound_player: String,
    pub fire_stop_sound: String,
    pub fire_stop_sound_player: String,
    pub fire_last_sound: String,
    pub fire_last_sound_player: String,
    pub empty_fire_sound: String,
    pub empty_fire_sound_player: String,
    pub crack_sound: String,
    pub whiz_by_sound: String,
    pub melee_swipe_sound: String,
    pub melee_swipe_sound_player: String,
    pub melee_hit_sound: String,
    pub melee_miss_sound: String,
    pub rechamber_sound: String,
    pub rechamber_sound_player: String,
    pub reload_sound: String,
    pub reload_sound_player: String,
    pub reload_empty_sound: String,
    pub reload_empty_sound_player: String,
    pub reload_start_sound: String,
    pub reload_start_sound_player: String,
    pub reload_end_sound: String,
    pub reload_end_sound_player: String,
    pub rotate_loop_sound: String,
    pub rotate_loop_sound_player: String,
    pub deploy_sound: String,
    pub deploy_sound_player: String,
    pub finish_deploy_sound: String,
    pub finish_deploy_sound_player: String,
    pub breakdown_sound: String,
    pub breakdown_sound_player: String,
    pub finish_breakdown_sound: String,
    pub finish_breakdown_sound_player: String,
    pub detonate_sound: String,
    pub detonate_sound_player: String,
    pub night_vision_wear_sound: String,
    pub night_vision_wear_sound_player: String,
    pub night_vision_remove_sound: String,
    pub night_vision_remove_sound_player: String,
    pub alt_switch_sound: String,
    pub alt_switch_sound_player: String,
    pub raise_sound: String,
    pub raise_sound_player: String,
    pub first_raise_sound: String,
    pub first_raise_sound_player: String,
    pub put_away_sound: String,
    pub put_away_sound_player: String,
    pub overheat_sound: String,
    pub overheat_sound_player: String,
    pub ads_zoom_sound: String,
    pub bounce_sound: Option<Box<[String; 31]>>,
    pub stand_mounted_weapdef: String,
    pub crouch_mounted_weapdef: String,
    pub prone_mounted_weapdef: String,
    pub stand_mounted_index: i32,
    pub crouch_mounted_index: i32,
    pub prone_mounted_index: i32,
    pub view_shell_eject_effect: Option<Box<fx::FxEffectDef>>,
    pub world_shell_eject_effect: Option<Box<fx::FxEffectDef>>,
    pub view_last_shot_eject_effect: Option<Box<fx::FxEffectDef>>,
    pub world_last_shot_eject_effect: Option<Box<fx::FxEffectDef>>,
    pub reticle_center: Option<Box<techset::Material>>,
    pub reticle_side: Option<Box<techset::Material>>,
    pub reticle_center_size: i32,
    pub reticle_side_size: i32,
    pub reticle_min_ofs: i32,
    pub active_reticle_type: u32,
    pub stand_move: Vec3,
    pub stand_rot: Vec3,
    pub ducked_ofs: Vec3,
    pub ducked_move: Vec3,
    pub ducked_sprint_ofs: Vec3,
    pub ducked_sprint_rot: Vec3,
    pub ducked_sprint_bob: Vec2,
    pub ducked_sprint_cycle_scale: f32,
    pub sprint_ofs: Vec3,
    pub sprint_rot: Vec3,
    pub sprint_bob: Vec2,
    pub sprint_cycle_scale: f32,
    pub low_ready_ofs: Vec3,
    pub low_ready_rot: Vec3,
    pub dtp_ofs: Vec3,
    pub dtp_rot: Vec3,
    pub dtp_bob: Vec2,
    pub dtp_cycle_scale: f32,
    pub mantle_ofs: Vec3,
    pub mantle_rot: Vec3,
    pub slide_ofs: Vec3,
    pub slide_rot: Vec3,
    pub ducked_rot: Vec3,
    pub prone_ofs: Vec3,
    pub prone_move: Vec3,
    pub prone_rot: Vec3,
    pub strafe_move: Vec3,
    pub strafe_rot: Vec3,
    pub pos_move_rate: f32,
    pub pos_prone_move_rate: f32,
    pub stand_move_min_speed: f32,
    pub ducked_move_min_speed: f32,
    pub prone_move_min_speed: f32,
    pub pos_rot_rate: f32,
    pub pos_prone_rot_rate: f32,
    pub stand_rot_min_speed: f32,
    pub ducked_rot_min_speed: f32,
    pub prone_rot_min_speed: f32,
    pub world_model: Option<Box<[xmodel::XModel; 16]>>,
    pub world_clip_model: Option<Box<xmodel::XModel>>,
    pub rocket_model: Option<Box<xmodel::XModel>>,
    pub mounted_model: Option<Box<xmodel::XModel>>,
    pub additional_melee_model: Option<Box<xmodel::XModel>>,
    pub hud_icon: Option<Box<techset::Material>>,
    pub hud_icon_ratio: u32,
    pub indicator_icon: Option<Box<techset::Material>>,
    pub indicator_icon_ratio: u32,
    pub ammo_counter_icon: Option<Box<techset::Material>>,
    pub ammo_counter_icon_ratio: u32,
    pub ammo_counter_clip: u32,
    pub start_ammo: i32,
    pub head_index: i32,
    pub max_ammo: i32,
    pub shot_count: i32,
    pub shared_ammo_cap_name: String,
    pub shared_ammo_cap_index: i32,
    pub shared_ammo_cap: i32,
    pub unlimited_ammo: bool,
    pub ammo_count_clip_relative: bool,
    pub damage: i32,
    pub damage_duration: f32,
    pub damage_interval: f32,
    pub player_damage: i32,
    pub melee_damage: i32,
    pub damage_type: i32,
    pub explosion_tag: String,
    pub fire_delay: i32,
    pub melee_delay: i32,
    pub melee_charge_delay: i32,
    pub detonate_delay: i32,
    pub spin_up_time: i32,
    pub spin_down_time: i32,
    pub spin_rate: f32,
    pub spin_loop_sound: String,
    pub spin_loop_sound_player: String,
    pub start_spin_sound: String,
    pub start_spin_sound_player: String,
    pub stop_spin_sound: String,
    pub stop_spin_sound_player: String,
    pub fire_time: i32,
    pub last_fire_time: i32,
    pub rechamber_time: i32,
    pub rechamber_bolt_time: i32,
    pub hold_fire_time: i32,
    pub detonate_fire_time: i32,
    pub melee_time: i32,
    pub melee_charge_time: i32,
    pub reload_time_right: i32,
    pub reload_time_left: i32,
    pub reload_show_rocket_time: i32,
    pub reload_empty_time_left: i32,
    pub reload_add_time: i32,
    pub reload_empty_add_time: i32,
    pub reload_quick_add_time: i32,
    pub reload_quick_empty_add_time: i32,
    pub reload_start_time: i32,
    pub reload_start_add_time: i32,
    pub reload_end_time: i32,
    pub drop_time: i32,
    pub raise_time: i32,
    pub alt_drop_time: i32,
    pub quick_drop_time: i32,
    pub quick_raise_time: i32,
    pub first_raise_time: i32,
    pub empty_raise_time: i32,
    pub empty_drop_time: i32,
    pub sprint_in_time: i32,
    pub sprint_loop_time: i32,
    pub sprint_out_time: i32,
    pub low_ready_in_time: i32,
    pub low_ready_loop_time: i32,
    pub low_ready_out_time: i32,
    pub cont_fire_in_time: i32,
    pub cont_fire_loop_time: i32,
    pub cont_fire_out_time: i32,
    pub dtp_in_time: i32,
    pub dtp_loop_time: i32,
    pub dtp_out_time: i32,
    pub slide_in_time: i32,
    pub deploy_time: i32,
    pub breakdown_time: i32,
    pub night_vision_wear_time: i32,
    pub night_vision_wear_time_fade_out_end: i32,
    pub night_vision_wear_time_power_up: i32,
    pub night_vision_remove_time: i32,
    pub night_vision_remove_time_power_down: i32,
    pub night_vision_remove_time_fade_in_start: i32,
    pub fuse_time: i32,
    pub ai_fuse_time: i32,
    pub lock_on_radius: i32,
    pub lock_on_speed: i32,
    pub require_lockon_to_fire: bool,
    pub no_ads_when_mag_empty: bool,
    pub avoid_drop_cleanup: bool,
    pub stack_fire: u32,
    pub stack_fire_spread: f32,
    pub stack_fire_accuracy_decay: f32,
    pub stack_sound: String,
    pub auto_aim_range: f32,
    pub aim_assist_range: f32,
    pub mountable_weapon: bool,
    pub aim_padding: f32,
    pub enemy_crosshair_range: f32,
    pub crosshair_color_change: bool,
    pub move_speed_scale: f32,
    pub ads_move_speed_scale: f32,
    pub sprint_duration_scale: f32,
    pub overlay_reticle: u32,
    pub overlay_interface: u32,
    pub overlay_width: f32,
    pub overlay_height: f32,
    pub ads_bob_factor: f32,
    pub ads_view_bob_mult: f32,
    pub hip_spread_stand_min: f32,
    pub hip_spread_ducked_min: f32,
    pub hip_spread_prone_min: f32,
    pub hip_spread_stand_max: f32,
    pub hip_spread_ducked_max: f32,
    pub hip_spread_prone_max: f32,
    pub hip_spread_decay_rate: f32,
    pub hip_spread_fire_add: f32,
    pub hip_spread_turn_add: f32,
    pub hip_spread_move_add: f32,
    pub hip_spread_ducked_decay: f32,
    pub hip_spread_prone_decay: f32,
    pub hip_reticle_side_pos: f32,
    pub ads_idle_amount: f32,
    pub hip_idle_amount: f32,
    pub ads_idle_speed: f32,
    pub hip_idle_speed: f32,
    pub idle_crouch_factor: f32,
    pub idle_prone_factor: f32,
    pub gun_max_pitch: f32,
    pub gun_max_yaw: f32,
    pub sway_max_angle: f32,
    pub sway_lerp_speed: f32,
    pub sway_pitch_scale: f32,
    pub sway_yaw_scale: f32,
    pub sway_horiz_scale: f32,
    pub sway_vert_scale: f32,
    pub sway_shell_shock_scale: f32,
    pub ads_sway_max_angle: f32,
    pub ads_sway_lerp_speed: f32,
    pub ads_sway_pitch_scale: f32,
    pub ads_sway_yaw_scale: f32,
    pub shared_ammo: bool,
    pub rifle_bullet: bool,
    pub armor_piercing: bool,
    pub bolt_action: bool,
    pub use_alt_tag_flesh: bool,
    pub use_anti_lag_rewind: bool,
    pub is_carried_killstreak_weapon: bool,
    pub aim_down_sight: bool,
    pub rechamber_while_ads: bool,
    pub reload_while_ads: bool,
    pub ads_view_error_min: f32,
    pub ads_view_error_max: f32,
    pub cook_off_hold: bool,
    pub clip_only: bool,
    pub can_use_in_vehicle: bool,
    pub no_drops_or_raises: bool,
    pub ads_fire_only: bool,
    pub cancel_auto_holster_when_empty: bool,
    pub suppress_ammo_reserve_display: bool,
    pub laser_sight_during_nightvision: bool,
    pub hide_third_person: bool,
    pub has_bayonet: bool,
    pub dual_wield: bool,
    pub explode_on_ground: bool,
    pub throw_back: bool,
    pub retrievable: bool,
    pub die_on_respawn: bool,
    pub no_third_person_drops_or_raises: bool,
    pub continuous_fire: bool,
    pub no_ping: bool,
    pub force_bounce: bool,
    pub use_dropped_model_as_stowed: bool,
    pub no_quick_drop_when_empty: bool,
    pub keep_crosshair_when_ads: bool,
    pub use_only_alt_weaopon_hide_tags_in_alt_mode: bool,
    pub kill_icon: Option<Box<techset::Material>>,
    pub kill_icon_ratio: u32,
    pub flip_kill_icon: bool,
    pub no_partial_reload: bool,
    pub segmented_reload: bool,
    pub no_ads_auto_reload: bool,
    pub reload_ammo_add: i32,
    pub reload_start_add: i32,
    pub spawned_grenade_weapon_name: String,
    pub dual_wield_weapon_name: String,
    pub dual_wield_weapon_index: u32,
    pub drop_ammo_min: i32,
    pub drop_ammo_max: i32,
    pub drop_clip_ammo_min: i32,
    pub drop_clip_ammo_max: i32,
    pub blocks_prone: bool,
    pub show_indicator: bool,
    pub is_rolling_grenade: i32,
    pub explosion_radius: i32,
    pub explosion_radius_min: i32,
    pub indicator_radius: i32,
    pub explosion_inner_damage: i32,
    pub explosion_outer_damage: i32,
    pub damage_cone_angle: f32,
    pub projectile_speed: i32,
    pub projectile_speed_up: i32,
    pub projectile_speed_relative_up: i32,
    pub projectile_speed_forward: i32,
    pub projectile_active_dist: i32,
    pub proj_lifetime: f32,
    pub time_to_accelerate: f32,
    pub projectile_curvature: f32,
    pub projectile_model: Option<Box<xmodel::XModel>>,
    pub proj_explosion: u32,
    pub proj_explosion_effect: Option<Box<fx::FxEffectDef>>,
    pub proj_explosion_effect_force_normal_up: bool,
    pub proj_explosion_effect_2: Option<Box<fx::FxEffectDef>>,
    pub proj_explosion_effect_2_force_normal_up: bool,
    pub proj_explosion_effect_3: Option<Box<fx::FxEffectDef>>,
    pub proj_explosion_effect_3_force_normal_up: bool,
    pub proj_explosion_effect_4: Option<Box<fx::FxEffectDef>>,
    pub proj_explosion_effect_4_force_normal_up: bool,
    pub proj_explosion_effect_5: Option<Box<fx::FxEffectDef>>,
    pub proj_explosion_effect_5_force_normal_up: bool,
    pub proj_dud_effect: Option<Box<fx::FxEffectDef>>,
    pub proj_explosion_sound: String,
    pub proj_dud_sound: String,
    pub mortar_shell_sound: String,
    pub tank_shell_sound: String,
    pub proj_impact_explode: bool,
    pub bullet_impact_explode: bool,
    pub stickiness: u32,
    pub rotate_type: u32,
    pub plantable: bool,
    pub has_detonator: bool,
    pub time_detonation: bool,
    pub no_crumple_missile: bool,
    pub rotate: bool,
    pub keep_rolling: bool,
    pub hold_button_to_throw: bool,
    pub offhand_hold_is_cancelable: bool,
    pub freeze_movement_when_firing: bool,
    pub low_ammo_warning_threshold: f32,
    pub melee_charge_range: f32,
    pub use_as_melee: bool,
    pub is_camera_sensor: bool,
    pub is_acoustic_sensor: bool,
    pub parallel_bounce: Option<Box<[f32; 31]>>,
    pub perpendicular_bounce: Option<Box<[f32; 31]>>,
    pub proj_tail_effect: Option<Box<fx::FxEffectDef>>,
    pub projectile_color: Vec3,
    pub guided_missile_type: u32,
    pub max_steering_accel: f32,
    pub proj_ignition_delay: i32,
    pub proj_ignition_effect: Option<Box<fx::FxEffectDef>>,
    pub proj_ignition_sound: String,
    pub ads_aim_pitch: f32,
    pub ads_crosshair_in_frac: f32,
    pub ads_crosshair_out_frac: f32,
    pub ads_gun_kick_reduced_kick_bullets: i32,
    pub ads_gun_kick_reduced_kick_percent: f32,
    pub ads_gun_kick_pitch_min: f32,
    pub ads_gun_kick_pitch_max: f32,
    pub ads_gun_kick_yaw_min: f32,
    pub ads_gun_kick_yaw_max: f32,
    pub ads_gun_kick_accel: f32,
    pub ads_gun_kick_speed_max: f32,
    pub ads_gun_kick_speed_decay: f32,
    pub ads_gun_kick_static_decay: f32,
    pub ads_view_kick_pitch_min: f32,
    pub ads_view_kick_pitch_max: f32,
    pub ads_view_kick_yaw_min: f32,
    pub ads_view_kick_yaw_max: f32,
    pub ads_view_scatter_min: f32,
    pub ads_view_scatter_max: f32,
    pub ads_spread: f32,
    pub hip_gun_kick_reduced_kick_bullets: i32,
    pub hip_gun_kick_reduced_kick_percent: f32,
    pub hip_gun_kick_pitch_min: f32,
    pub hip_gun_kick_pitch_max: f32,
    pub hip_gun_kick_yaw_min: f32,
    pub hip_gun_kick_yaw_max: f32,
    pub hip_gun_kick_accel: f32,
    pub hip_gun_kick_speed_max: f32,
    pub hip_gun_kick_speed_decay: f32,
    pub hip_gun_kick_static_decay: f32,
    pub hip_view_kick_pitch_min: f32,
    pub hip_view_kick_pitch_max: f32,
    pub hip_view_kick_yaw_min: f32,
    pub hip_view_kick_yaw_max: f32,
    pub hip_view_scatter_min: f32,
    pub hip_view_scatter_max: f32,
    pub fight_dist: f32,
    pub max_dist: f32,
    pub accuracy_graph_name: [String; 2],
    pub accuracy_graph_knots: [Vec<Vec2>; 2],
    pub original_accuracy_graph_knots: [Vec<Vec2>; 2],
    pub accuracy_graph_knot_count: [i32; 2],
    pub original_accuracy_graph_knot_count: [i32; 2],
    pub position_reload_trans_time: i32,
    pub left_arc: f32,
    pub right_arc: f32,
    pub top_arc: f32,
    pub bottom_arc: f32,
    pub accuracy: f32,
    pub ai_spread: f32,
    pub player_spread: f32,
    pub min_turn_speed: Vec2,
    pub max_turn_speed: Vec2,
    pub pitch_convergence_time: f32,
    pub yaw_convergence_time: f32,
    pub suppress_time: f32,
    pub max_range: f32,
    pub anim_hor_rotate_inc: f32,
    pub player_position_dist: f32,
    pub use_hint_string: String,
    pub drop_hint_string: String,
    pub use_hint_string_index: i32,
    pub drop_hint_string_index: i32,
    pub horiz_view_jitter: f32,
    pub vert_view_jitter: f32,
    pub script: String,
    pub min_damage: i32,
    pub min_player_damage: i32,
    pub max_damage_range: f32,
    pub min_damage_range: f32,
    pub destabilization_rate_time: f32,
    pub destabilization_curvature_max: f32,
    pub destabilize_distance: i32,
    pub location_damage_multipliers: Option<Box<[f32; 19]>>,
    pub fire_rumble: String,
    pub melee_impact_rumble: String,
    pub reload_rumble: String,
    pub ads_dof_start: f32,
    pub ads_dof_end: f32,
    pub hip_dof_start: f32,
    pub hip_dof_end: f32,
    pub scan_speed: f32,
    pub scan_accel: f32,
    pub scan_pause_time: i32,
    pub flame_table_first_person: String,
    pub flame_table_third_person: String,
    pub flame_table_first_person_ptr: Option<Box<FlameTable>>,
    pub flame_table_third_person_ptr: Option<Box<FlameTable>>,
    pub tag_fx_preparation_effect: Option<Box<fx::FxEffectDef>>,
    pub tag_flash_preparation_effect: Option<Box<fx::FxEffectDef>>,
    pub do_gibbing: bool,
    pub max_gib_distance: f32,
}

impl<'a> XFileInto<WeaponDef, ()> for WeaponDefRaw<'a> {
    fn xfile_into(&self, _xfile: impl Read + Seek, _data: ()) -> Result<WeaponDef> {
        todo!()
    }
}

#[cfg_attr(feature = "serde", derive(Serialize))]
#[derive(Copy, Clone, Default, Debug, Deserialize)]
pub(crate) struct FlameTableRaw<'a> {
    pub flame_var_stream_chunk_gravity_start: f32,
    pub flame_var_stream_chunk_gravity_end: f32,
    pub flame_var_stream_chunk_max_size: f32,
    pub flame_var_stream_chunk_start_size: f32,
    pub flame_var_stream_chunk_end_size: f32,
    pub flame_var_stream_chunk_start_size_rand: f32,
    pub flame_var_stream_chunk_end_size_rand: f32,
    pub flame_var_stream_chunk_dist_scalar: f32,
    pub flame_var_stream_chunk_dist_sway_scale: f32,
    pub flame_var_stream_chunk_dist_sway_vel_max: f32,
    pub flame_var_stream_chunk_speed: f32,
    pub flame_var_stream_chunk_decel: f32,
    pub flame_var_stream_chunk_velocity_add: f32,
    pub flame_var_stream_chunk_duration: f32,
    pub flame_var_stream_chunk_duration_scale_max_vel: f32,
    pub flame_var_stream_chunk_duration_vel_scalar: f32,
    pub flame_var_stream_chunk_size_speed_scale: f32,
    pub flame_var_stream_chunk_size_age_scale: f32,
    pub flame_var_stream_chunk_spawn_fire_interval_start: f32,
    pub flame_var_stream_chunk_spawn_fire_interval_end: f32,
    pub flame_var_stream_chunk_spawn_fire_min_life_frac: f32,
    pub flame_var_stream_chunk_spawn_fire_max_life_frac: f32,
    pub flame_var_stream_chunk_fire_min_life_frac: f32,
    pub flame_var_stream_chunk_fire_min_life_frac_start: f32,
    pub flame_var_stream_chunk_fire_min_life_frac_end: f32,
    pub flame_var_stream_chunk_drips_min_life_frac: f32,
    pub flame_var_stream_chunk_drips_min_life_frac_start: f32,
    pub flame_var_stream_chunk_drips_min_life_frac_end: f32,
    pub flame_var_stream_chunk_rotation_range: f32,
    pub flame_var_stream_size_rand_sin_wave: f32,
    pub flame_var_stream_size_rand_cos_wave: f32,
    pub flame_var_stream_drips_chunk_interval: f32,
    pub flame_var_stream_drips_chunk_min_frac: f32,
    pub flame_var_stream_drips_chunk_rand_frac: f32,
    pub flame_var_stream_smoke_chunk_interval: f32,
    pub flame_var_stream_smoke_chunk_min_frac: f32,
    pub flame_var_stream_smoke_chunk_rand_frac: f32,
    pub flame_var_stream_chunk_cull_dist_size_frac: f32,
    pub flame_var_stream_chunk_cull_min_life: f32,
    pub flame_var_stream_chunk_cull_max_life: f32,
    pub flame_var_stream_fuel_size_start: f32,
    pub flame_var_stream_fuel_size_end: f32,
    pub flame_var_stream_fuel_length: f32,
    pub flame_var_stream_fuel_num_segments: f32,
    pub flame_var_stream_fuel_anim_loop_time: f32,
    pub flame_var_stream_flame_size_start: f32,
    pub flame_var_stream_flame_size_end: f32,
    pub flame_var_stream_flame_length: f32,
    pub flame_var_stream_flame_num_sgments: f32,
    pub flame_var_stream_flame_anim_loop_time: f32,
    pub flame_var_stream_primary_light_radius: f32,
    pub flame_var_stream_primary_light_radius_flutter: f32,
    pub flame_var_stream_primary_light_r: f32,
    pub flame_var_stream_primary_light_g: f32,
    pub flame_var_stream_primary_light_b: f32,
    pub flame_var_stream_primary_light_flutter_r: f32,
    pub flame_var_stream_primary_light_flutter_g: f32,
    pub flame_var_stream_primary_light_flutter_b: f32,
    pub flame_var_fire_life: f32,
    pub flame_var_fire_life_rand: f32,
    pub flame_var_fire_speed_scale: f32,
    pub flame_var_fire_speed_scale_rand: f32,
    pub flame_var_fire_velocity_add_z: f32,
    pub flame_var_fire_velocity_add_z_rand: f32,
    pub flame_var_fire_velocity_add_sideways: f32,
    pub flame_var_fire_gravity: f32,
    pub flame_var_fire_gravity_end: f32,
    pub flame_var_fire_max_rot_vel: f32,
    pub flame_var_fire_friction: f32,
    pub flame_var_fire_end_size_add: f32,
    pub flame_var_fire_start_size_scale: f32,
    pub flame_var_fire_end_size_scale: f32,
    pub flame_var_drips_life: f32,
    pub flame_var_drips_life_rand: f32,
    pub flame_var_drips_speed_scale: f32,
    pub flame_var_drips_speed_scale_rand: f32,
    pub flame_var_drips_velocity_add_z: f32,
    pub flame_var_drips_velocity_add_z_rand: f32,
    pub flame_var_drips_velocity_add_sideways: f32,
    pub flame_var_drips_gravity: f32,
    pub flame_var_drips_gravity_end: f32,
    pub flame_var_drips_max_rot_vel: f32,
    pub flame_var_drips_friction: f32,
    pub flame_var_drips_end_size_add: f32,
    pub flame_var_drips_start_size_scale: f32,
    pub flame_var_drips_end_size_scale: f32,
    pub flame_var_smoke_life: f32,
    pub flame_var_smoke_life_rand: f32,
    pub flame_var_smoke_speed_scale: f32,
    pub flame_var_smoke_velocity_add_z: f32,
    pub flame_var_smoke_gravity: f32,
    pub flame_var_smoke_gravity_end: f32,
    pub flame_var_smoke_max_rotation: f32,
    pub flame_var_smoke_max_rot_vel: f32,
    pub flame_var_smoke_friction: f32,
    pub flame_var_smoke_end_size_add: f32,
    pub flame_var_smoke_start_size_add: f32,
    pub flame_var_smoke_origin_size_ofs_z_scale: f32,
    pub flame_var_smoke_origin_ofs_z: f32,
    pub flame_var_smoke_fadein: f32,
    pub flame_var_smoke_fadeout: f32,
    pub flame_var_smoke_max_alpha: f32,
    pub flame_var_smoke_brightness: f32,
    pub flame_var_smoke_origin_offset: f32,
    pub flame_var_collision_speed_scale: f32,
    pub flame_var_collision_volume_scale: f32,
    pub name: XString<'a>,
    pub fire: Ptr32<'a, techset::MaterialRaw<'a>>,
    pub smoke: Ptr32<'a, techset::MaterialRaw<'a>>,
    pub heat: Ptr32<'a, techset::MaterialRaw<'a>>,
    pub drips: Ptr32<'a, techset::MaterialRaw<'a>>,
    pub stream_fuel: Ptr32<'a, techset::MaterialRaw<'a>>,
    pub stream_fuel_2: Ptr32<'a, techset::MaterialRaw<'a>>,
    pub stream_flame: Ptr32<'a, techset::MaterialRaw<'a>>,
    pub stream_flame_2: Ptr32<'a, techset::MaterialRaw<'a>>,
    pub flame_off_loop_sound: XString<'a>,
    pub flame_ignite_sound: XString<'a>,
    pub flame_on_loop_sound: XString<'a>,
    pub flame_cooldown_sound: XString<'a>,
}
assert_size!(FlameTableRaw, 476);

#[cfg_attr(feature = "serde", derive(Serialize, Deserialize))]
#[derive(Clone, Default, Debug)]
pub struct FlameTable {
    pub flame_var_stream_chunk_gravity_start: f32,
    pub flame_var_stream_chunk_gravity_end: f32,
    pub flame_var_stream_chunk_max_size: f32,
    pub flame_var_stream_chunk_start_size: f32,
    pub flame_var_stream_chunk_end_size: f32,
    pub flame_var_stream_chunk_start_size_rand: f32,
    pub flame_var_stream_chunk_end_size_rand: f32,
    pub flame_var_stream_chunk_dist_scalar: f32,
    pub flame_var_stream_chunk_dist_sway_scale: f32,
    pub flame_var_stream_chunk_dist_sway_vel_max: f32,
    pub flame_var_stream_chunk_speed: f32,
    pub flame_var_stream_chunk_decel: f32,
    pub flame_var_stream_chunk_velocity_add: f32,
    pub flame_var_stream_chunk_duration: f32,
    pub flame_var_stream_chunk_duration_scale_max_vel: f32,
    pub flame_var_stream_chunk_duration_vel_scalar: f32,
    pub flame_var_stream_chunk_size_speed_scale: f32,
    pub flame_var_stream_chunk_size_age_scale: f32,
    pub flame_var_stream_chunk_spawn_fire_interval_start: f32,
    pub flame_var_stream_chunk_spawn_fire_interval_end: f32,
    pub flame_var_stream_chunk_spawn_fire_min_life_frac: f32,
    pub flame_var_stream_chunk_spawn_fire_max_life_frac: f32,
    pub flame_var_stream_chunk_fire_min_life_frac: f32,
    pub flame_var_stream_chunk_fire_min_life_frac_start: f32,
    pub flame_var_stream_chunk_fire_min_life_frac_end: f32,
    pub flame_var_stream_chunk_drips_min_life_frac: f32,
    pub flame_var_stream_chunk_drips_min_life_frac_start: f32,
    pub flame_var_stream_chunk_drips_min_life_frac_end: f32,
    pub flame_var_stream_chunk_rotation_range: f32,
    pub flame_var_stream_size_rand_sin_wave: f32,
    pub flame_var_stream_size_rand_cos_wave: f32,
    pub flame_var_stream_drips_chunk_interval: f32,
    pub flame_var_stream_drips_chunk_min_frac: f32,
    pub flame_var_stream_drips_chunk_rand_frac: f32,
    pub flame_var_stream_smoke_chunk_interval: f32,
    pub flame_var_stream_smoke_chunk_min_frac: f32,
    pub flame_var_stream_smoke_chunk_rand_frac: f32,
    pub flame_var_stream_chunk_cull_dist_size_frac: f32,
    pub flame_var_stream_chunk_cull_min_life: f32,
    pub flame_var_stream_chunk_cull_max_life: f32,
    pub flame_var_stream_fuel_size_start: f32,
    pub flame_var_stream_fuel_size_end: f32,
    pub flame_var_stream_fuel_length: f32,
    pub flame_var_stream_fuel_num_segments: f32,
    pub flame_var_stream_fuel_anim_loop_time: f32,
    pub flame_var_stream_flame_size_start: f32,
    pub flame_var_stream_flame_size_end: f32,
    pub flame_var_stream_flame_length: f32,
    pub flame_var_stream_flame_num_sgments: f32,
    pub flame_var_stream_flame_anim_loop_time: f32,
    pub flame_var_stream_primary_light_radius: f32,
    pub flame_var_stream_primary_light_radius_flutter: f32,
    pub flame_var_stream_primary_light_r: f32,
    pub flame_var_stream_primary_light_g: f32,
    pub flame_var_stream_primary_light_b: f32,
    pub flame_var_stream_primary_light_flutter_r: f32,
    pub flame_var_stream_primary_light_flutter_g: f32,
    pub flame_var_stream_primary_light_flutter_b: f32,
    pub flame_var_fire_life: f32,
    pub flame_var_fire_life_rand: f32,
    pub flame_var_fire_speed_scale: f32,
    pub flame_var_fire_speed_scale_rand: f32,
    pub flame_var_fire_velocity_add_z: f32,
    pub flame_var_fire_velocity_add_z_rand: f32,
    pub flame_var_fire_velocity_add_sideways: f32,
    pub flame_var_fire_gravity: f32,
    pub flame_var_fire_gravity_end: f32,
    pub flame_var_fire_max_rot_vel: f32,
    pub flame_var_fire_friction: f32,
    pub flame_var_fire_end_size_add: f32,
    pub flame_var_fire_start_size_scale: f32,
    pub flame_var_fire_end_size_scale: f32,
    pub flame_var_drips_life: f32,
    pub flame_var_drips_life_rand: f32,
    pub flame_var_drips_speed_scale: f32,
    pub flame_var_drips_speed_scale_rand: f32,
    pub flame_var_drips_velocity_add_z: f32,
    pub flame_var_drips_velocity_add_z_rand: f32,
    pub flame_var_drips_velocity_add_sideways: f32,
    pub flame_var_drips_gravity: f32,
    pub flame_var_drips_gravity_end: f32,
    pub flame_var_drips_max_rot_vel: f32,
    pub flame_var_drips_friction: f32,
    pub flame_var_drips_end_size_add: f32,
    pub flame_var_drips_start_size_scale: f32,
    pub flame_var_drips_end_size_scale: f32,
    pub flame_var_smoke_life: f32,
    pub flame_var_smoke_life_rand: f32,
    pub flame_var_smoke_speed_scale: f32,
    pub flame_var_smoke_velocity_add_z: f32,
    pub flame_var_smoke_gravity: f32,
    pub flame_var_smoke_gravity_end: f32,
    pub flame_var_smoke_max_rotation: f32,
    pub flame_var_smoke_max_rot_vel: f32,
    pub flame_var_smoke_friction: f32,
    pub flame_var_smoke_end_size_add: f32,
    pub flame_var_smoke_start_size_add: f32,
    pub flame_var_smoke_origin_size_ofs_z_scale: f32,
    pub flame_var_smoke_origin_ofs_z: f32,
    pub flame_var_smoke_fadein: f32,
    pub flame_var_smoke_fadeout: f32,
    pub flame_var_smoke_max_alpha: f32,
    pub flame_var_smoke_brightness: f32,
    pub flame_var_smoke_origin_offset: f32,
    pub flame_var_collision_speed_scale: f32,
    pub flame_var_collision_volume_scale: f32,
    pub name: String,
    pub fire: Option<Box<techset::Material>>,
    pub smoke: Option<Box<techset::Material>>,
    pub heat: Option<Box<techset::Material>>,
    pub drips: Option<Box<techset::Material>>,
    pub stream_fuel: Option<Box<techset::Material>>,
    pub stream_fuel_2: Option<Box<techset::Material>>,
    pub stream_flame: Option<Box<techset::Material>>,
    pub stream_flame_2: Option<Box<techset::Material>>,
    pub flame_off_loop_sound: String,
    pub flame_ignite_sound: String,
    pub flame_on_loop_sound: String,
    pub flame_cooldown_sound: String,
}

impl<'a> XFileInto<FlameTable, ()> for FlameTableRaw<'a> {
    fn xfile_into(&self, mut xfile: impl Read + Seek, _data: ()) -> Result<FlameTable> {
        let name = self.name.xfile_into(&mut xfile, ())?;
        let fire = self.fire.xfile_into(&mut xfile, ())?;
        let smoke = self.smoke.xfile_into(&mut xfile, ())?;
        let heat = self.heat.xfile_into(&mut xfile, ())?;
        let drips = self.drips.xfile_into(&mut xfile, ())?;
        let stream_fuel = self.stream_fuel.xfile_into(&mut xfile, ())?;
        let stream_fuel_2 = self.stream_fuel_2.xfile_into(&mut xfile, ())?;
        let stream_flame = self.stream_flame.xfile_into(&mut xfile, ())?;
        let stream_flame_2 = self.stream_flame_2.xfile_into(&mut xfile, ())?;
        let flame_off_loop_sound = self.flame_off_loop_sound.xfile_into(&mut xfile, ())?;
        let flame_ignite_sound = self.flame_ignite_sound.xfile_into(&mut xfile, ())?;
        let flame_on_loop_sound = self.flame_on_loop_sound.xfile_into(&mut xfile, ())?;
        let flame_cooldown_sound = self.flame_cooldown_sound.xfile_into(xfile, ())?;

        Ok(FlameTable {
            flame_var_stream_chunk_gravity_start: self.flame_var_stream_chunk_gravity_start,
            flame_var_stream_chunk_gravity_end: self.flame_var_stream_chunk_gravity_end,
            flame_var_stream_chunk_max_size: self.flame_var_stream_chunk_max_size,
            flame_var_stream_chunk_start_size: self.flame_var_stream_chunk_start_size,
            flame_var_stream_chunk_end_size: self.flame_var_stream_chunk_end_size,
            flame_var_stream_chunk_start_size_rand: self.flame_var_stream_chunk_start_size_rand,
            flame_var_stream_chunk_end_size_rand: self.flame_var_stream_chunk_end_size_rand,
            flame_var_stream_chunk_dist_scalar: self.flame_var_stream_chunk_dist_scalar,
            flame_var_stream_chunk_dist_sway_scale: self.flame_var_stream_chunk_dist_sway_scale,
            flame_var_stream_chunk_dist_sway_vel_max: self.flame_var_stream_chunk_dist_sway_vel_max,
            flame_var_stream_chunk_speed: self.flame_var_stream_chunk_speed,
            flame_var_stream_chunk_decel: self.flame_var_stream_chunk_decel,
            flame_var_stream_chunk_velocity_add: self.flame_var_stream_chunk_velocity_add,
            flame_var_stream_chunk_duration: self.flame_var_stream_chunk_duration,
            flame_var_stream_chunk_duration_scale_max_vel: self
                .flame_var_stream_chunk_duration_scale_max_vel,
            flame_var_stream_chunk_duration_vel_scalar: self
                .flame_var_stream_chunk_duration_vel_scalar,
            flame_var_stream_chunk_size_speed_scale: self.flame_var_stream_chunk_size_speed_scale,
            flame_var_stream_chunk_size_age_scale: self.flame_var_stream_chunk_size_age_scale,
            flame_var_stream_chunk_spawn_fire_interval_start: self
                .flame_var_stream_chunk_spawn_fire_interval_start,
            flame_var_stream_chunk_spawn_fire_interval_end: self
                .flame_var_stream_chunk_spawn_fire_interval_end,
            flame_var_stream_chunk_spawn_fire_min_life_frac: self
                .flame_var_stream_chunk_spawn_fire_min_life_frac,
            flame_var_stream_chunk_spawn_fire_max_life_frac: self
                .flame_var_stream_chunk_spawn_fire_max_life_frac,
            flame_var_stream_chunk_fire_min_life_frac: self
                .flame_var_stream_chunk_fire_min_life_frac,
            flame_var_stream_chunk_fire_min_life_frac_start: self
                .flame_var_stream_chunk_fire_min_life_frac_start,
            flame_var_stream_chunk_fire_min_life_frac_end: self
                .flame_var_stream_chunk_fire_min_life_frac_end,
            flame_var_stream_chunk_drips_min_life_frac: self
                .flame_var_stream_chunk_drips_min_life_frac,
            flame_var_stream_chunk_drips_min_life_frac_start: self
                .flame_var_stream_chunk_drips_min_life_frac_start,
            flame_var_stream_chunk_drips_min_life_frac_end: self
                .flame_var_stream_chunk_drips_min_life_frac_end,
            flame_var_stream_chunk_rotation_range: self.flame_var_stream_chunk_rotation_range,
            flame_var_stream_size_rand_sin_wave: self.flame_var_stream_size_rand_sin_wave,
            flame_var_stream_size_rand_cos_wave: self.flame_var_stream_size_rand_cos_wave,
            flame_var_stream_drips_chunk_interval: self.flame_var_stream_drips_chunk_interval,
            flame_var_stream_drips_chunk_min_frac: self.flame_var_stream_drips_chunk_min_frac,
            flame_var_stream_drips_chunk_rand_frac: self.flame_var_stream_drips_chunk_rand_frac,
            flame_var_stream_smoke_chunk_interval: self.flame_var_stream_smoke_chunk_interval,
            flame_var_stream_smoke_chunk_min_frac: self.flame_var_stream_smoke_chunk_min_frac,
            flame_var_stream_smoke_chunk_rand_frac: self.flame_var_stream_smoke_chunk_rand_frac,
            flame_var_stream_chunk_cull_dist_size_frac: self
                .flame_var_stream_chunk_cull_dist_size_frac,
            flame_var_stream_chunk_cull_min_life: self.flame_var_stream_chunk_cull_min_life,
            flame_var_stream_chunk_cull_max_life: self.flame_var_stream_chunk_cull_max_life,
            flame_var_stream_fuel_size_start: self.flame_var_stream_fuel_size_start,
            flame_var_stream_fuel_size_end: self.flame_var_stream_fuel_size_end,
            flame_var_stream_fuel_length: self.flame_var_stream_fuel_length,
            flame_var_stream_fuel_num_segments: self.flame_var_stream_fuel_num_segments,
            flame_var_stream_fuel_anim_loop_time: self.flame_var_stream_fuel_anim_loop_time,
            flame_var_stream_flame_size_start: self.flame_var_stream_flame_size_start,
            flame_var_stream_flame_size_end: self.flame_var_stream_flame_size_end,
            flame_var_stream_flame_length: self.flame_var_stream_flame_length,
            flame_var_stream_flame_num_sgments: self.flame_var_stream_flame_num_sgments,
            flame_var_stream_flame_anim_loop_time: self.flame_var_stream_flame_anim_loop_time,
            flame_var_stream_primary_light_radius: self.flame_var_stream_primary_light_radius,
            flame_var_stream_primary_light_radius_flutter: self
                .flame_var_stream_primary_light_radius_flutter,
            flame_var_stream_primary_light_r: self.flame_var_stream_primary_light_r,
            flame_var_stream_primary_light_g: self.flame_var_stream_primary_light_g,
            flame_var_stream_primary_light_b: self.flame_var_stream_primary_light_b,
            flame_var_stream_primary_light_flutter_r: self.flame_var_stream_primary_light_flutter_r,
            flame_var_stream_primary_light_flutter_g: self.flame_var_stream_primary_light_flutter_g,
            flame_var_stream_primary_light_flutter_b: self.flame_var_stream_primary_light_flutter_b,
            flame_var_fire_life: self.flame_var_fire_life,
            flame_var_fire_life_rand: self.flame_var_fire_life_rand,
            flame_var_fire_speed_scale: self.flame_var_fire_speed_scale,
            flame_var_fire_speed_scale_rand: self.flame_var_fire_speed_scale_rand,
            flame_var_fire_velocity_add_z: self.flame_var_fire_velocity_add_z,
            flame_var_fire_velocity_add_z_rand: self.flame_var_fire_velocity_add_z_rand,
            flame_var_fire_velocity_add_sideways: self.flame_var_fire_velocity_add_sideways,
            flame_var_fire_gravity: self.flame_var_fire_gravity,
            flame_var_fire_gravity_end: self.flame_var_fire_gravity_end,
            flame_var_fire_max_rot_vel: self.flame_var_fire_max_rot_vel,
            flame_var_fire_friction: self.flame_var_fire_friction,
            flame_var_fire_end_size_add: self.flame_var_fire_end_size_add,
            flame_var_fire_start_size_scale: self.flame_var_fire_start_size_scale,
            flame_var_fire_end_size_scale: self.flame_var_fire_end_size_scale,
            flame_var_drips_life: self.flame_var_drips_life,
            flame_var_drips_life_rand: self.flame_var_drips_life_rand,
            flame_var_drips_speed_scale: self.flame_var_drips_speed_scale,
            flame_var_drips_speed_scale_rand: self.flame_var_drips_speed_scale_rand,
            flame_var_drips_velocity_add_z: self.flame_var_drips_velocity_add_z,
            flame_var_drips_velocity_add_z_rand: self.flame_var_drips_velocity_add_z_rand,
            flame_var_drips_velocity_add_sideways: self.flame_var_drips_velocity_add_sideways,
            flame_var_drips_gravity: self.flame_var_drips_gravity,
            flame_var_drips_gravity_end: self.flame_var_drips_gravity_end,
            flame_var_drips_max_rot_vel: self.flame_var_drips_max_rot_vel,
            flame_var_drips_friction: self.flame_var_drips_friction,
            flame_var_drips_end_size_add: self.flame_var_drips_end_size_add,
            flame_var_drips_start_size_scale: self.flame_var_drips_start_size_scale,
            flame_var_drips_end_size_scale: self.flame_var_drips_end_size_scale,
            flame_var_smoke_life: self.flame_var_smoke_life,
            flame_var_smoke_life_rand: self.flame_var_smoke_life_rand,
            flame_var_smoke_speed_scale: self.flame_var_smoke_speed_scale,
            flame_var_smoke_velocity_add_z: self.flame_var_smoke_velocity_add_z,
            flame_var_smoke_gravity: self.flame_var_smoke_gravity,
            flame_var_smoke_gravity_end: self.flame_var_smoke_gravity_end,
            flame_var_smoke_max_rotation: self.flame_var_smoke_max_rotation,
            flame_var_smoke_max_rot_vel: self.flame_var_smoke_max_rot_vel,
            flame_var_smoke_friction: self.flame_var_smoke_friction,
            flame_var_smoke_end_size_add: self.flame_var_smoke_end_size_add,
            flame_var_smoke_start_size_add: self.flame_var_smoke_start_size_add,
            flame_var_smoke_origin_size_ofs_z_scale: self.flame_var_smoke_origin_size_ofs_z_scale,
            flame_var_smoke_origin_ofs_z: self.flame_var_smoke_origin_ofs_z,
            flame_var_smoke_fadein: self.flame_var_smoke_fadein,
            flame_var_smoke_fadeout: self.flame_var_smoke_fadeout,
            flame_var_smoke_max_alpha: self.flame_var_smoke_max_alpha,
            flame_var_smoke_brightness: self.flame_var_smoke_brightness,
            flame_var_smoke_origin_offset: self.flame_var_smoke_origin_offset,
            flame_var_collision_speed_scale: self.flame_var_collision_speed_scale,
            flame_var_collision_volume_scale: self.flame_var_collision_volume_scale,
            name,
            fire,
            smoke,
            heat,
            drips,
            stream_fuel,
            stream_fuel_2,
            stream_flame,
            stream_flame_2,
            flame_off_loop_sound,
            flame_ignite_sound,
            flame_on_loop_sound,
            flame_cooldown_sound,
        })
    }
}
